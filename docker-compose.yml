version: "3.3"
services:    
  es1:
    build: .
    image: myelasticsearch
    container_name: es1
    volumes:
      - ./esdata1:/usr/share/elasticsearch/data
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./snapshot1:/etc/snapshots
    environment:
      - node.name=es1
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx2048m"
      - discovery.type=single-node
      - ES_HEAP_SIZE=8g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9300:9300"
      - "9200:9200"
    networks:
      - elastic
    restart: unless-stopped

### add additionall instances accordingly
  es2:
    image: elasticsearch:5.6.16-alpine
    container_name: es2
    volumes:
      - ./esdata2:/usr/share/elasticsearch/data
      - ./elasticsearch5.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./snapshot:/etc/snapshots
    environment:
      - node.name=es2
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9301:9300"
      - "9201:9200"
    networks:
      - elastic

  kib1:
    image: kibana:4.6.6
    container_name: kib1
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es1:9200
      ELASTICSEARCH_HOSTS: http://es1:9200
    networks:
      - elastic

  redis:
    image: redis:alpine
    volumes:
      - ./redis-data:/data
      #- ./redis.conf:/usr/local/etc/redis/redis.conf
    environment:
     - REDIS_REPLICATION_MODE=master
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    ports:
      - 6379:6379
    restart: unless-stopped

  mongo:
    image: mongo
    container_name: "mongo"
    environment:
      - MONGO_DATA_DIR=/data/db
    #  - MONGO_LOG_DIR=/dev/null
      - MONGODB_USER="mongo"
      - MONGODB_PASS="mongo"
    volumes:
      #  - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongodata:/data/db
    ports:
      - 27017:27017
      - 27018:27018
      - 27019:27019
#        command: mongod --smallfiles --logpath=/dev/null # --quiet
    restart: unless-stopped
    networks:
      - mongo-net

        #  nginx:
        #    image: 'bitnami/nginx:1.16'
        #    ports:
        #      - '80:8080'
        #    volumes:
            #      - ./nginx.conf:/bitnami/nginx/conf/vhosts/nginx.conf:ro
            #      - ./nginx.conf:/opt/bitnami/nginx/conf/server_blocks/nginx.conf:ro
        #- nginxroot:/app:ro
        #      - ../certs:/certs

networks:
  mongo-net:
    driver: bridge
  elastic:
    driver: bridge

volumes:
  esdata1:
  esdata2:
  mongodata:
  redis-data:
  nginxroot:
